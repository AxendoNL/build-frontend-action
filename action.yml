name: 'Build frontend'
description: 'Build frontend files for Umbraco V9'
inputs:
  frontend-directory:
    description: 'Path to the frontend directory'
    required: true
  cd-path:
    description: 'NPM cache dependency path'
    required: true
    default: '**/**.Frontend/package-lock.json'
  app-path: 
    description: 'path to web application (usually the .web project)'
    required: true
    
env: 
  assets-folder: "assets"
    
runs:
  using: "composite"
  steps:
     ### Get latest git commit with changes to frontend project
    - id: FRONTEND_HASH
      run: echo "::set-output name=hash::$(git log -1 --pretty=format:'%h' --follow '${{ inputs.frontend-directory }}')"       
      shell: powershell
      
    ### First make sure the directory assets exists, this is needed or cache action will throw an error
    - name: Create Directory.
      run: New-Item -Path "${{ inputs.app-path }}\\wwwroot" -Name "${{ env.assets-folder }}" -ItemType "directory" -Force
      shell: powershell
      
    ### Check cache action for existing frontend build
    - name: Cache Frontend Build
      id: CACHE_FRONTEND
      uses: actions/cache@v3
      with:
        path: "${{ inputs.app-path }}\\wwwroot\\${{ env.assets-folder }}"
        key: frontend-cache-${{steps.FRONTEND_HASH.outputs.hash}}
  
    ### below if will make sure this only runs when the frontend needs to be build   
    - uses: actions/setup-node@v3
      if: steps.CACHE_FRONTEND.outputs.cache-hit != 'true'
      with:
        node-version: '14'
        cache: 'npm'
        cache-dependency-path: ${{ inputs.cd-path == '' && '**/**.Frontend/npm-shrinkwrap.json' || inputs.cd-path }}
        
    - name: NPM install
      if: steps.CACHE_FRONTEND.outputs.cache-hit != 'true'
      run: npm install
      working-directory: ${{ inputs.frontend-directory }}
      shell: powershell
    - name: Install Gulp-cli
      if: steps.CACHE_FRONTEND.outputs.cache-hit != 'true'
      run: npm install -g gulp-cli
      working-directory: ${{ inputs.frontend-directory }}
      shell: powershell
    - name: Install Gulp 
      if: steps.CACHE_FRONTEND.outputs.cache-hit != 'true'
      run: npm install gulp
      working-directory: ${{ inputs.frontend-directory }}
      shell: powershell
    - name: Run gulp
      if: steps.CACHE_FRONTEND.outputs.cache-hit != 'true'
      run: gulp releaseBuild
      working-directory: ${{ inputs.frontend-directory }}
      shell: powershell
